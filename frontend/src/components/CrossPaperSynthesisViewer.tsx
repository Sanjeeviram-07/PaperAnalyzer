import React, { useState } from 'react';
import { FileText, Brain, Tag, ExternalLink, Download, Copy, Check } from 'lucide-react';

interface PaperAnalysis {
  title: string;
  authors: string[];
  year: string;
  key_insights: string[];
  summary: string;
  source: string;
}

interface CrossPaperSynthesisViewerProps {
  sourceInfo: any;
  citations: {
    papers: PaperAnalysis[];
    common_themes: string[];
  };
}

export default function CrossPaperSynthesisViewer({ sourceInfo, citations }: CrossPaperSynthesisViewerProps) {
  const [copied, setCopied] = useState(false);

  const copyToClipboard = async (text: string) => {
    try {
      await navigator.clipboard.writeText(text);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      console.error('Failed to copy text: ', err);
    }
  };

  const downloadSynthesis = () => {
    const synthesisData = {
      title: sourceInfo.title,
      synthesis_type: sourceInfo.synthesis_type,
      total_papers: sourceInfo.total_papers,
      common_themes: citations.common_themes,
      papers: citations.papers,
      generated_at: new Date().toISOString()
    };
    
    const blob = new Blob([JSON.stringify(synthesisData, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'cross-paper-synthesis.json';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  // Validate data
  if (!sourceInfo || !citations) {
    return (
      <div className="bg-purple-700/50 rounded-xl p-6">
        <h2 className="text-2xl font-semibold text-white mb-6 flex items-center">
          <Brain className="w-6 h-6 mr-2 text-teal-400" />
          Cross-Paper Synthesis Information
        </h2>
        <p className="text-purple-200">No synthesis data available.</p>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Synthesis Information */}
      <div className="bg-purple-700/50 rounded-xl p-6">
        <h2 className="text-2xl font-semibold text-white mb-6 flex items-center">
          <Brain className="w-6 h-6 mr-2 text-teal-400" />
          Cross-Paper Synthesis Information
        </h2>
        
        <div className="grid md:grid-cols-2 gap-6">
          <div className="space-y-4">
            <div>
              <h3 className="text-lg font-semibold text-white mb-2">Synthesis Title</h3>
              <p className="text-purple-200">{sourceInfo.title}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold text-white mb-2">Synthesis Type</h3>
              <p className="text-purple-200 capitalize">{sourceInfo.synthesis_type}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold text-white mb-2">Total Papers Analyzed</h3>
              <p className="text-purple-200">{sourceInfo.total_papers}</p>
            </div>
          </div>
          
          <div className="space-y-4">
            <div>
              <h3 className="text-lg font-semibold text-white mb-2">Generated By</h3>
              <p className="text-purple-200">{sourceInfo.authors.join(', ')}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold text-white mb-2">Year</h3>
              <p className="text-purple-200">{sourceInfo.year}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold text-white mb-2">Journal</h3>
              <p className="text-purple-200">{sourceInfo.journal}</p>
            </div>
          </div>
        </div>
        
        {/* Action Buttons */}
        <div className="flex flex-wrap gap-3 mt-6">
          <button
            onClick={downloadSynthesis}
            className="flex items-center space-x-2 bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-lg transition-colors"
          >
            <Download className="w-4 h-4" />
            <span>Download Synthesis Data</span>
          </button>
        </div>
      </div>

      {/* Common Themes */}
      {citations.common_themes && citations.common_themes.length > 0 && (
        <div className="bg-purple-700/50 rounded-xl p-6">
          <h2 className="text-2xl font-semibold text-white mb-6 flex items-center">
            <Tag className="w-6 h-6 mr-2 text-teal-400" />
            Common Themes
          </h2>
          
          <div className="flex flex-wrap gap-3">
            {citations.common_themes.map((theme, index) => (
              <span
                key={index}
                className="bg-teal-500 text-white px-4 py-2 rounded-full text-sm font-medium"
              >
                {theme}
              </span>
            ))}
          </div>
        </div>
      )}

      {/* Papers Analysis */}
      {citations.papers && citations.papers.length > 0 && (
        <div className="bg-purple-700/50 rounded-xl p-6">
          <h2 className="text-2xl font-semibold text-white mb-6 flex items-center">
            <FileText className="w-6 h-6 mr-2 text-teal-400" />
            Analyzed Papers ({citations.papers.length})
          </h2>
          
          <div className="space-y-6">
            {citations.papers.map((paper, index) => {
              // Validate paper data
              if (!paper || typeof paper !== 'object') {
                return null;
              }
              
              return (
              <div key={index} className="bg-purple-800/50 rounded-xl p-6">
                <div className="flex justify-between items-start mb-4">
                  <div className="flex-1">
                    <h3 className="text-xl font-semibold text-white mb-2">{paper.title}</h3>
                    <div className="flex items-center space-x-4 text-sm text-purple-300 mb-3">
                      <span>{Array.isArray(paper.authors) ? paper.authors.join(', ') : 'Unknown Authors'}</span>
                      {paper.year && <span>{paper.year}</span>}
                      <span className="bg-purple-600 px-2 py-1 rounded text-xs">
                        {paper.source || 'Unknown Source'}
                      </span>
                    </div>
                  </div>
                </div>
                
                <div className="space-y-4">
                  {/* Summary */}
                  <div>
                    <h4 className="text-lg font-semibold text-white mb-2">Summary</h4>
                    <p className="text-purple-200 text-sm leading-relaxed">
                      {paper.summary}
                    </p>
                  </div>
                  
                  {/* Key Insights */}
                  {paper.key_insights && Array.isArray(paper.key_insights) && paper.key_insights.length > 0 && (
                    <div>
                      <h4 className="text-lg font-semibold text-white mb-2">Key Insights</h4>
                      <ul className="space-y-2">
                        {paper.key_insights.map((insight, insightIndex) => (
                          <li key={insightIndex} className="text-purple-200 text-sm flex items-start">
                            <span className="text-teal-400 mr-2">â€¢</span>
                            <span>{insight}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>
              </div>
              );
            })}
          </div>
        </div>
      )}
    </div>
  );
} 